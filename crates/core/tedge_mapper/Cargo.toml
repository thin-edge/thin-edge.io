[package]
name = "tedge-mapper"
description = "tedge-mapper is the mapper that translates thin-edge.io data model to c8y/az data model."
version = { workspace = true }
authors = { workspace = true }
edition = { workspace = true }
rust-version = { workspace = true }
license = { workspace = true }
homepage = { workspace = true }
repository = { workspace = true }

[package.metadata.deb]
pre-depends = "tedge"
replaces = "tedge_mapper"
conflicts = "tedge_mapper (<= 0.8.1)"
breaks = "tedge_mapper (<= 0.8.1)"
provides = "tedge_mapper"
maintainer-scripts = "../../../configuration/debian/tedge-mapper"
assets = [
    [
        "../../../configuration/init/systemd/tedge-mapper-aws.service",
        "/lib/systemd/system/tedge-mapper-aws.service",
        "644"
    ],
    [
        "../../../configuration/init/systemd/tedge-mapper-az.service",
        "/lib/systemd/system/tedge-mapper-az.service",
        "644",
    ],
    [
        "../../../configuration/init/systemd/tedge-mapper-c8y.service",
        "/lib/systemd/system/tedge-mapper-c8y.service",
        "644",
    ],
    [
        "../../../configuration/init/systemd/tedge-mapper-collectd.service",
        "/lib/systemd/system/tedge-mapper-collectd.service",
        "644",
    ],
    [
        "../../../configuration/contrib/collectd/collectd.conf",
        "/etc/tedge/contrib/collectd/",
        "644",
    ],
    [
        "target/release/tedge-mapper",
        "/usr/bin/tedge-mapper",
        "755",
    ],
]

# Required for DEBHELPER
[package.metadata.deb.systemd-units]
enable = false
start = false
stop-on-upgrade = false

[dependencies]
anyhow = "1.0"
async-trait = "0.1"
aws_mapper_ext = { path = "../../extensions/aws_mapper_ext" }
az_mapper_ext = { path = "../../extensions/az_mapper_ext" }
batcher = { path = "../../common/batcher" }
c8y_http_proxy = { path = "../../extensions/c8y_http_proxy" }
c8y_mapper_ext = { path = "../../extensions/c8y_mapper_ext" }
clap = { version = "3.2", features = ["cargo", "derive"] }
clock = { path = "../../common/clock" }
collectd_ext = { path = "../../extensions/collectd_ext" }
flockfile = { path = "../../common/flockfile" }
mqtt_channel = { path = "../../common/mqtt_channel" }
tedge_actors = { path = "../../core/tedge_actors" }
tedge_config = { path = "../../common/tedge_config" }
tedge_file_system_ext = { path = "../../extensions/tedge_file_system_ext" }
tedge_health_ext = { path = "../../extensions/tedge_health_ext" }
tedge_http_ext = { path = "../../extensions/tedge_http_ext" }
tedge_mqtt_ext = { path = "../../extensions/tedge_mqtt_ext" }
tedge_signal_ext = { path = "../../extensions/tedge_signal_ext" }
tedge_timer_ext = { path = "../../extensions/tedge_timer_ext" }
tedge_utils = { path = "../../common/tedge_utils", features = [
    "logging",
] }
tokio = { version = "1.23", features = [
    "process",
    "rt",
    "rt-multi-thread",
    "sync",
    "time",
] }
tracing = { version = "0.1", features = ["attributes", "log"] }

[features]
integration-test = []
