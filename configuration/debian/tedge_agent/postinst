#!/bin/sh

set -e

### Create a group "tedge-agent" if not created before
if ! getent group tedge-agent >/dev/null; then
    addgroup --quiet --system tedge-agent
fi

### Create a user "tedge-agent" if not created before
# Create user tedge-agent with no home(--no-create-home), no login(--shell) and in group tedge-agent(--ingroup)
if ! getent passwd tedge-agent >/dev/null; then
    adduser --quiet --system --no-create-home --ingroup tedge-agent --shell /usr/sbin/nologin tedge-agent
fi

### Create file in /etc/sudoers.d directory
# tedge-agent needs to execute some of its operations as a system user therefore it needs an entry in /etc/sudoers.
echo "%tedge-agent   ALL = (ALL) NOPASSWD: /etc/tedge/sm-plugins/[a-zA-Z0-9]*, /bin/sync, /sbin/init" >/etc/sudoers.d/tedge-agent

if [ -f "/etc/sudoers.d/010_pi-nopasswd" ]; then
    echo "%tedge-agent   ALL = (ALL) NOPASSWD: /etc/tedge/sm-plugins/[a-zA-Z0-9]*, /bin/sync, /sbin/init" >/etc/sudoers.d/tedge-agent-nopasswd
fi

### Create directories
# Create tedge-agent state directory /etc/tedge/.agent
install -g tedge-agent -o tedge-agent -m 754 -d /etc/tedge/.agent

# Create /var/log/tedge/agent directory
install -g tedge-agent -o tedge-agent -m 755 -d /var/log/tedge/agent

# Reenable the services only if systemctl is available
if command -v systemctl >/dev/null; then
    ### Enable the sm services if the device is connected to c8y cloud
    if [ -f "/etc/tedge/mosquitto-conf/c8y-bridge.conf" ]; then
        # start and enable tedge-agent
        systemctl start tedge-agent.service
        systemctl enable tedge-agent.service

        # start and enable tedge-mapper-sm-c8y
        systemctl start tedge-mapper-sm-c8y.service
        systemctl enable tedge-mapper-sm-c8y.service
    fi
fi

#DEBHELPER#
