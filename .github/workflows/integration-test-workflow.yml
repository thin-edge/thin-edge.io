name: integration-test-workflow

on:
  workflow_dispatch:
    branches: [main]
  workflow_run:
    workflows: ["build-workflow"]
    branches: [main]
    types:
      - completed
env:
  CARGO_TERM_COLOR: always

jobs:
  install-and-use-amd64:
    runs-on: Ubuntu-20.04
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        # https://github.com/marketplace/actions/download-workflow-artifact
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build-workflow.yml
          workflow_conclusion: success
          branch: main
          name: debian-packages-amd64
          path: debian-package_unpack

      - name: Workaround Stop collectd mapper
        run: sudo systemctl stop tedge-mapper-collectd
        continue-on-error: true

      - name: disconnect c8y
        run: sudo tedge disconnect c8y
        # We need to continue when there is no tedge already installed
        continue-on-error: true

      - name: disconnect az
        run: sudo tedge disconnect az
        # We need to continue when there is no tedge already installed
        continue-on-error: true

      - name: purge
        run: sudo dpkg -P tedge_agent tedge_mapper tedge_apt_plugin tedge mosquitto libmosquitto1 collectd-core
        continue-on-error: true

      - name: install mosquitto
        run: sudo apt-get --assume-yes install mosquitto

      - name: install libmosquitto1
        run:  sudo apt-get --assume-yes install libmosquitto1

      - name: install collectd-core
        run: sudo apt-get --assume-yes install collectd-core

      - name: install packages
        run: sudo dpkg -i ./debian-package_unpack/*.deb

      - name: run tedge help
        run: tedge --help

        # replace the default config file with tedge custom config file
      - name: configure collectd
        run: sudo cp "/etc/tedge/contrib/collectd/collectd.conf" "/etc/collectd/collectd.conf"

  cargo-test-features:
    name: Run cargo test features
    runs-on: Ubuntu-20.04
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Enable cache
        # https://github.com/marketplace/actions/rust-cache
        uses: Swatinem/rust-cache@v1

      - name: Cargo test features (compile)
        # If we do not compile in advance the timing in the test run
        # will not work out as some parts are still compiling during the run
        uses: actions-rs/cargo@v1
        # https://github.com/marketplace/actions/rust-cargo
        with:
          command: test
          args: --verbose --no-run --features integration-test

        # To run the test for features here is kind of experimental
        # they could fail if GitHub blocks external connections.
        # It seems like they rarely do.
      - name: Cargo test features
        uses: actions-rs/cargo@v1
        # https://github.com/marketplace/actions/rust-cargo
        with:
          command: test
          args: --verbose --features integration-test -- --skip sending_and_receiving_a_message

  install-and-use-rpi:
    runs-on: [self-hosted, Linux, ARM, onsite]
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        # https://github.com/marketplace/actions/download-workflow-artifact
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build-workflow.yml
          workflow_conclusion: success
          branch: main
          name: debian-packages-armv7-unknown-linux-gnueabihf
          path: debian-package_unpack

      - name: Workaround Stop collectd mapper
        run: sudo systemctl stop tedge-mapper-collectd
        continue-on-error: true


      - name: disconnect c8y
        run: sudo tedge disconnect c8y
        # We need to continue when there is no tedge already installed
        continue-on-error: true

      - name: disconnect az
        run: sudo tedge disconnect az
        # We need to continue when there is no tedge already installed
        continue-on-error: true

      # mosquitto-clients is required for system test only, but has dependency on libmosquitto1.
      # therefore, we need to purge it here, and mosquitto-clients is required only for RPi.
      - name: purge
        run: sudo dpkg -P tedge_agent tedge_mapper tedge_apt_plugin tedge mosquitto-clients mosquitto libmosquitto1 collectd-core
        continue-on-error: true

      - name: install mosquitto
        run: sudo apt-get --assume-yes install mosquitto

      - name: install libmosquitto1
        run:  sudo apt-get --assume-yes install libmosquitto1

      - name: install mosquitto-clients
        run: sudo apt-get --assume-yes install mosquitto-clients

      - name: install collectd-core
        run: sudo apt-get --assume-yes install collectd-core

      - name: install packages
        run: sudo dpkg -i ./debian-package_unpack/*.deb

      - name: run tedge help
        run: tedge --help

        # replace the default config file with tedge custom config file
      - name: configure collectd
        run: sudo cp "/etc/tedge/contrib/collectd/collectd.conf" "/etc/collectd/collectd.conf"

      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        # https://github.com/marketplace/actions/download-workflow-artifact
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build-workflow.yml
          workflow_conclusion: success
          branch: main
          name: examples_armv7-unknown-linux-gnueabihf
          path: /home/pi/examples

      - name: chmod publisher
        run: chmod +x /home/pi/examples/sawtooth_publisher

      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        # https://github.com/marketplace/actions/download-workflow-artifact
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build-workflow.yml
          workflow_conclusion: success
          branch: main
          name: tedge_dummy_plugin_armv7-unknown-linux-gnueabihf
          path: /home/pi/tedge_dummy_plugin

      - name: chmod dummy_plugin
        run: chmod +x /home/pi/tedge_dummy_plugin/tedge_dummy_plugin

      - name: Run smoke test for Cumulocity
        run: ./ci/ci_smoke_test_c8y.sh
        env:
          C8YPASS: ${{ secrets.SECRET_C8YPASS }}
          C8YUSERNAME: ${{ secrets.SECRET_C8YUSERNAME }}
          C8YTENANT: ${{secrets.SECRET_C8YTENANT}}
          C8YDEVICE: ${{ secrets.SECRET_C8YDEVICE }}
          C8YDEVICEID: ${{ secrets.SECRET_C8YDEVICEID }}
          TEBASEDIR: /home/pi/actions-runner/_work/thin-edge.io/thin-edge.io/
          EXAMPLEDIR: /home/pi/examples
          C8YURL: https://thin-edge-io.eu-latest.cumulocity.com
          IOTHUBNAME: ${{ secrets.IOTHUBNAME }}

      - name: Run Smoke Test for Azure
        run: ./ci/ci_smoke_test_az.sh
        env:
          C8YDEVICE: ${{ secrets.SECRET_C8YDEVICE }}
          SASKEYQUEUE: ${{ secrets.SASKEYQUEUE }}
          SASKEYIOTHUB: ${{ secrets.SASKEYIOTHUB }}
          AZUREENDPOINT: ${{ secrets.AZUREENDPOINT }}
          AZUREEVENTHUB: ${{ secrets.AZUREEVENTHUB }}
          IOTHUBNAME: ${{ secrets.IOTHUBNAME }}


