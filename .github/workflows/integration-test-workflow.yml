name: integration-test-workflow

on:
  workflow_dispatch:
    branches: [main]
  workflow_run:
    workflows: ["build-workflow"]
    branches: [main]
    types:
      - completed
env:
  CARGO_TERM_COLOR: always

jobs:
  install-and-use-amd64:
    runs-on: Ubuntu-20.04
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        # https://github.com/marketplace/actions/download-workflow-artifact
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build-workflow.yml
          workflow_conclusion: success
          branch: main
          name: debian-packages-amd64
          path: debian-package_unpack

      - name: purge
        run: sudo dpkg -P mosquitto tedge tedge_mapper tedge_apt_plugin collectd-core
        continue-on-error: true

      - name: install mosquitto
        run: sudo apt-get --assume-yes install mosquitto

        #install collectd-core
      - name: install collectd-core
        run: sudo apt-get --assume-yes install collectd-core

      - name: install packages
        run: sudo dpkg -i ./debian-package_unpack/*.deb

      - name: run tedge help
        run: tedge --help

        #replace the default config file with tedge custom config file
      - name: configure collectd
        run: sudo cp "/etc/tedge/contrib/collectd/collectd.conf" "/etc/collectd/collectd.conf"

  cargo-test-features:
    name: Run cargo test features
    runs-on: Ubuntu-20.04
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Enable cache
        # https://github.com/marketplace/actions/rust-cache
        uses: Swatinem/rust-cache@v1

      - name: Cargo test features (compile)
        # If we do not compile in advance the timing in the test run
        # will not work out as some parts are still compiling during the run
        uses: actions-rs/cargo@v1
        # https://github.com/marketplace/actions/rust-cargo
        with:
          command: test
          args: --verbose --no-run --features integration-test

        # To run the test for features here is kind of experimental
        # they could fail if GitHub blocks external connections.
        # It seems like they rarely do.
      - name: Cargo test features
        uses: actions-rs/cargo@v1
        # https://github.com/marketplace/actions/rust-cargo
        with:
          command: test
          args: --verbose --features integration-test -- --skip sending_and_receiving_a_message

  install-and-use-rpi:
    runs-on: [self-hosted, Linux, ARM]
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        # https://github.com/marketplace/actions/download-workflow-artifact
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build-workflow.yml
          workflow_conclusion: success
          branch: main
          name: debian-packages-armv7-unknown-linux-gnueabihf
          path: debian-package_unpack

      - name: purge
        run: sudo dpkg -P mosquitto tedge tedge_mapper tedge_apt_plugin collectd-core
        continue-on-error: true

      - name: install mosquitto
        run: sudo apt-get --assume-yes install mosquitto

        #install collectd-core
      - name: install collectd-core
        run: sudo apt-get --assume-yes install collectd-core

      - name: install packages
        run: sudo dpkg -i ./debian-package_unpack/*.deb

      - name: run tedge help
        run: tedge --help

        #replace the default config file with tedge custom config file
      - name: configure collectd
        run: sudo cp "/etc/tedge/contrib/collectd/collectd.conf" "/etc/collectd/collectd.conf"

      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        # https://github.com/marketplace/actions/download-workflow-artifact
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build-workflow.yml
          workflow_conclusion: success
          branch: main
          name: examples_armv7-unknown-linux-gnueabihf
          path: examples

      - name: Run Smoke Test
        run: ./ci/ci_smoke_test.sh
        env:
          C8YPASS: ${{ secrets.SECRET_C8YPASS }}
          C8YUSERNAME: ${{ secrets.SECRET_C8YUSERNAME }}
          C8YTENANT: ${{secrets.SECRET_C8YTENANT}}
          C8YDEVICE: ${{ secrets.SECRET_C8YDEVICE }}
          C8YDEVICEID: ${{ secrets.SECRET_C8YDEVICEID }}
