#!/bin/sh
# -*- sh -*-

: << =cut

=head1 NAME

tedgecpuprocent - Monitor CPU % consumption of ThinEdge tasks mosquitto, tedge-agent, and tedge-mapper

=head1 AUTHOR

Gligor Isaev

=head1 LICENSE

GPL-3.0-or-higher

=head1 MAGIC MARKERS

 #%# family=manual

=cut

. "$MUNIN_LIBDIR/plugins/plugin.sh"

# Get the PIDs of mosquitto, tedge-agent, and tedge-mapper
mosquitto_pid=$(pidof mosquitto)
tedgeagent_pid=$(pidof tedge-agent)
tedgemapper_pids=$(pidof tedge-mapper)

tasks=""
cpu=""

# Fetch CPU usage percentage for each process using ps
for i in $mosquitto_pid $tedgeagent_pid; do
    commcpu=$(ps -p $i -o comm=,%cpu= | tr -s ' ')
    comm=$(echo $commcpu | cut -d' ' -f1)     # Get the process name
    cpu_usage=$(echo $commcpu | cut -d' ' -f2)  # Get the CPU percentage
    tasks="$tasks $comm"
    cpu="$cpu $cpu_usage"
done

# Fetch CPU usage percentage for tedge-mapper processes
for i in $tedgemapper_pids; do
    commcpu=$(ps -p $i -o args=,%cpu= | tr -s ' ')
    comm=$(echo $commcpu | cut -d/ -f4 | cut -d' ' -f1,2 | tr ' ' _)  # Extract process name
    cpu_usage=$(echo $commcpu | cut -d' ' -f3)                        # Get CPU percentage
    tasks="$tasks $comm"
    cpu="$cpu $cpu_usage"
done

# If config is requested, output graph configuration
if [ "$1" = "config" ]; then
    echo 'graph_title Real-time usage CPU percentage of ThinEdge.io tasks'
    echo 'graph_args --base 1000 --vertical-label % -l 0'
    echo 'graph_category thin-edge'
    echo 'graph_vlabel CPU Usage (%)'
    echo 'graph_scale no'  # Ensures no unit scaling
    echo 'graph_info This graph shows CPU usage as a percentage for key ThinEdge.io processes.'
    for i in $tasks; do
        echo "$i.label $i"    # Set the label name for each process
        echo "$i.draw LINE2"   # Optional: ensure the drawing style is consistent
    done
    exit 0
fi

# Output the actual data for Munin to plot
tasknum=$(echo "$tasks" | tr ' ' "\n" | wc -l)
for i in $(seq 1 "$tasknum"); do
    task=$(echo "$tasks" | cut -d' ' -f$i)
    cpu_usage=$(echo "$cpu" | cut -d' ' -f$i)
    echo "$task.value $cpu_usage"
done
